group 'service-discovery'
version '2.1'

apply from: 'libs.gradle'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'jetty'

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
	mavenCentral()
}

configurations {
	jetty
	distribution
	releaseJars
}

buildscript {
	repositories {
		jcenter()
		maven {
			url "http://repo.spring.io/milestone"
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE"
	}
}

dependencies {
	compile "org.codehaus.groovy:groovy-all:${libs.groovy}"
	compile "org.reflections:reflections:0.9.10"
	compile("org.springframework.boot:spring-boot-starter-web") {
		/* is needed to resolve conflict between jetty and tomcat logging.
		 * tomcat is included in spring boot by default */
		exclude module: 'spring-boot-starter-tomcat'
	}
	compile 'org.springframework.boot:spring-boot-starter-jetty:1.3.2.RELEASE'
	testCompile group: 'junit', name: 'junit', version: libs.junit
	releaseJars "org.reflections:reflections:0.9.10"
}

task run(dependsOn: 'classes', type: JavaExec) {
	main = 'uni.tartu.Main'
	classpath = sourceSets.main.runtimeClasspath
}
//create a single Jar with only required dependencies
task jarjarBinks(type: Jar) {
	sourceSets {
		main {
			groovy {
				exclude '**/web/**'
				exclude '**/Application.java'
				exclude '**/Main.groovy'
			}
			resources {
				exclude '**/*.csv'
				exclude '**/*.properties'
			}
		}
	}
	manifest {
		attributes 'Implementation-Title': 'Service Discovery',
			'Implementation-Version': '2.1',
			'Class-Path': 'service-discovery-all-2.1.jar'
	}
	baseName = project.name + '-all'
	from configurations.releaseJars.collect { it.isDirectory() ? it : zipTree(it) }
	with jar
}